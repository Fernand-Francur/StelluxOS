#include <serial/serial.h>
#include <boot/multiboot2.h>
#include <arch/arch_init.h>
#include <interrupts/irq.h>
#include <memory/paging.h>
#include <memory/allocators/page_bootstrap_allocator.h>

__PRIVILEGED_DATA
char* g_mbi_kernel_cmdline;

__PRIVILEGED_DATA
multiboot_tag_framebuffer* g_mbi_framebuffer;

__PRIVILEGED_DATA
void* g_mbi_efi_mmap;

// PSF font data embedded in binary
const uint8_t psf_font_data[] = {
    0x36, 0x04, 0x02, 0x10, 0x00, 0x00, 0x00, 0x3E, 0x63, 0x5D, 0x7D, 0x7B, 
    0x77, 0x77, 0x7F, 0x77, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x7E, 0x24, 0x24, 0x24, 0x24, 0x24, 0x24, 0x22, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x7F, 0x04, 0x08, 0x10, 0x7F, 0x20, 
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x10, 0x20, 0x40, 
    0x20, 0x10, 0x08, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x10, 0x08, 0x04, 0x02, 0x04, 0x08, 0x10, 0x00, 0x3E, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x38, 0x7C, 
    0xFE, 0x7C, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x30, 
    0x10, 0x11, 0x12, 0x04, 0x08, 0x12, 0x26, 0x4A, 0x0F, 0x02, 0x02, 0x00, 
    0x00, 0x00, 0x10, 0x30, 0x10, 0x11, 0x12, 0x04, 0x08, 0x10, 0x26, 0x49, 
    0x02, 0x04, 0x0F, 0x00, 0x00, 0x00, 0x70, 0x08, 0x30, 0x09, 0x72, 0x04, 
    0x08, 0x12, 0x26, 0x4A, 0x0F, 0x02, 0x02, 0x00, 0x00, 0x00, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 
    0x00, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x30, 0x00, 0x00, 0x07, 0x08, 
    0x08, 0x08, 0x3E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 
    0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 
    0xA4, 0xA4, 0x48, 0x10, 0x10, 0x2A, 0x55, 0x55, 0x8A, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0xF1, 0x5B, 0x55, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x49, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x08, 0x10, 0x20, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x08, 0x04, 0x08, 0x10, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x24, 0x12, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x24, 
    0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 
    0x24, 0x24, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x24, 0x24, 0x24, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x08, 0x00, 
    0x42, 0x3C, 0x00, 0x3C, 0x42, 0x42, 0x40, 0x40, 0x4E, 0x42, 0x42, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x42, 0x3C, 0x00, 0x00, 0x3A, 0x46, 0x42, 
    0x42, 0x42, 0x46, 0x3A, 0x02, 0x02, 0x42, 0x3C, 0x08, 0x08, 0x00, 0x3E, 
    0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x3E, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x40, 0x30, 
    0x0C, 0x02, 0x42, 0x42, 0x3C, 0x08, 0x08, 0x30, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x3C, 0x42, 0x40, 0x30, 0x0C, 0x02, 0x42, 0x3C, 0x08, 0x08, 0x30, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x24, 
    0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x24, 0x24, 0x24, 0x7E, 0x24, 0x24, 0x7E, 0x24, 0x24, 
    0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x3E, 0x49, 0x48, 0x48, 
    0x3E, 0x09, 0x09, 0x49, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x31, 
    0x4A, 0x4A, 0x34, 0x08, 0x08, 0x16, 0x29, 0x29, 0x46, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x18, 0x24, 0x24, 0x24, 0x18, 0x28, 0x45, 0x42, 0x46, 
    0x39, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x10, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x08, 
    0x08, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x08, 0x08, 0x04, 0x00, 0x00, 
    0x00, 0x00, 0x20, 0x10, 0x10, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x10, 
    0x10, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x49, 0x2A, 
    0x1C, 0x2A, 0x49, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x08, 0x08, 0x08, 0x7F, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
    0x08, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x10, 0x20, 
    0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x4A, 
    0x52, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
    0x18, 0x28, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x3E, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 
    0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x02, 0x1C, 
    0x02, 0x02, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 
    0x0C, 0x14, 0x24, 0x44, 0x44, 0x7E, 0x04, 0x04, 0x04, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x7E, 0x40, 0x40, 0x40, 0x7C, 0x02, 0x02, 0x02, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x20, 0x40, 0x40, 0x7C, 
    0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 
    0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x3C, 0x42, 0x42, 0x42, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 
    0x3E, 0x02, 0x02, 0x04, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x08, 
    0x08, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x08, 0x10, 0x20, 
    0x40, 0x20, 0x10, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x04, 0x08, 0x10, 
    0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x02, 0x04, 
    0x08, 0x08, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 
    0x22, 0x4A, 0x56, 0x52, 0x52, 0x52, 0x4E, 0x20, 0x1E, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x18, 0x24, 0x24, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 
    0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x42, 0x42, 0x42, 0x7C, 
    0x42, 0x42, 0x42, 0x42, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 
    0x42, 0x42, 0x40, 0x40, 0x40, 0x40, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x78, 0x44, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x44, 
    0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x40, 0x40, 0x40, 0x7C, 
    0x40, 0x40, 0x40, 0x40, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 
    0x40, 0x40, 0x40, 0x7C, 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x40, 0x40, 0x4E, 0x42, 0x42, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x42, 0x42, 0x42, 0x7E, 
    0x42, 0x42, 0x42, 0x42, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 
    0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x3E, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x1F, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0x44, 
    0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x44, 0x48, 0x50, 0x60, 
    0x60, 0x50, 0x48, 0x44, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 
    0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7E, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x41, 0x63, 0x63, 0x55, 0x55, 0x49, 0x49, 0x41, 0x41, 
    0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x62, 0x62, 0x52, 0x52, 
    0x4A, 0x4A, 0x46, 0x46, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 
    0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x7C, 0x42, 0x42, 0x42, 0x42, 0x7C, 0x40, 0x40, 0x40, 
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 
    0x42, 0x42, 0x5A, 0x66, 0x3C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 
    0x42, 0x42, 0x42, 0x7C, 0x48, 0x44, 0x44, 0x42, 0x42, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x40, 0x30, 0x0C, 0x02, 0x42, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 
    0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x41, 0x41, 0x41, 0x22, 0x22, 0x22, 0x14, 0x14, 0x08, 
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x41, 0x41, 0x49, 0x49, 
    0x55, 0x55, 0x63, 0x63, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 
    0x42, 0x24, 0x24, 0x18, 0x18, 0x24, 0x24, 0x42, 0x42, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x41, 0x41, 0x22, 0x22, 0x14, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x02, 0x02, 0x04, 0x08, 
    0x10, 0x20, 0x40, 0x40, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x10, 
    0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1C, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x20, 0x20, 0x10, 0x10, 0x08, 0x08, 0x04, 0x04, 0x02, 
    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x08, 0x38, 0x00, 0x00, 0x00, 0x08, 0x14, 0x22, 
    0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x7F, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0x08, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x3C, 0x42, 0x02, 0x3E, 0x42, 0x42, 0x46, 0x3A, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x40, 0x40, 0x40, 0x5C, 0x62, 0x42, 0x42, 0x42, 0x42, 0x62, 
    0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x40, 
    0x40, 0x40, 0x40, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 
    0x02, 0x3A, 0x46, 0x42, 0x42, 0x42, 0x42, 0x46, 0x3A, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x7E, 0x40, 0x40, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x10, 0x10, 0x10, 0x7C, 0x10, 
    0x10, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x3A, 0x46, 0x42, 0x42, 0x42, 0x46, 0x3A, 0x02, 0x02, 0x42, 0x3C, 
    0x00, 0x00, 0x40, 0x40, 0x40, 0x5C, 0x62, 0x42, 0x42, 0x42, 0x42, 0x42, 
    0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x18, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 
    0x00, 0x0C, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x44, 0x38, 
    0x00, 0x00, 0x40, 0x40, 0x40, 0x44, 0x48, 0x50, 0x60, 0x50, 0x48, 0x44, 
    0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x76, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x62, 0x42, 0x42, 0x42, 0x42, 0x42, 
    0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 
    0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x5C, 0x62, 0x42, 0x42, 0x42, 0x42, 0x62, 0x5C, 0x40, 0x40, 0x40, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x46, 0x42, 0x42, 0x42, 0x42, 0x46, 
    0x3A, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x62, 0x40, 
    0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x3C, 0x42, 0x40, 0x30, 0x0C, 0x02, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x10, 0x10, 0x10, 0x10, 0x7C, 0x10, 0x10, 0x10, 0x10, 0x10, 
    0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x42, 0x42, 
    0x42, 0x42, 0x42, 0x46, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x41, 0x41, 0x41, 0x22, 0x22, 0x14, 0x14, 0x08, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x41, 0x49, 0x49, 0x49, 0x49, 0x49, 
    0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x42, 0x24, 
    0x18, 0x18, 0x24, 0x42, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x42, 0x42, 0x42, 0x42, 0x42, 0x46, 0x3A, 0x02, 0x02, 0x42, 0x3C, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 
    0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x08, 0x08, 0x08, 0x08, 0x30, 
    0x08, 0x08, 0x08, 0x08, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 
    0x00, 0x00, 0x30, 0x08, 0x08, 0x08, 0x08, 0x06, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x30, 0x00, 0x00, 0x00, 0x31, 0x49, 0x46, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x30, 0x0C, 0x00, 0x18, 0x24, 0x24, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 
    0x42, 0x00, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x18, 0x24, 0x24, 0x42, 0x42, 
    0x7E, 0x42, 0x42, 0x42, 0x42, 0x00, 0x00, 0x00, 0x18, 0x24, 0x00, 0x18, 
    0x24, 0x24, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x42, 0x00, 0x00, 0x00, 
    0x32, 0x4C, 0x00, 0x18, 0x24, 0x24, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 
    0x42, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x18, 0x24, 0x24, 0x42, 0x42, 
    0x7E, 0x42, 0x42, 0x42, 0x42, 0x00, 0x00, 0x00, 0x18, 0x24, 0x24, 0x18, 
    0x24, 0x24, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x42, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x1F, 0x28, 0x48, 0x48, 0x7E, 0x48, 0x48, 0x48, 0x48, 
    0x4F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x40, 0x40, 
    0x40, 0x40, 0x42, 0x42, 0x3C, 0x08, 0x08, 0x30, 0x30, 0x0C, 0x00, 0x7E, 
    0x40, 0x40, 0x40, 0x7C, 0x40, 0x40, 0x40, 0x40, 0x7E, 0x00, 0x00, 0x00, 
    0x0C, 0x30, 0x00, 0x7E, 0x40, 0x40, 0x40, 0x7C, 0x40, 0x40, 0x40, 0x40, 
    0x7E, 0x00, 0x00, 0x00, 0x18, 0x24, 0x00, 0x7E, 0x40, 0x40, 0x40, 0x7C, 
    0x40, 0x40, 0x40, 0x40, 0x7E, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x7E, 
    0x40, 0x40, 0x40, 0x7C, 0x40, 0x40, 0x40, 0x40, 0x7E, 0x00, 0x00, 0x00, 
    0x30, 0x0C, 0x00, 0x3E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x3E, 0x00, 0x00, 0x00, 0x06, 0x18, 0x00, 0x3E, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x3E, 0x00, 0x00, 0x00, 0x18, 0x24, 0x00, 0x3E, 
    0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x3E, 0x00, 0x00, 0x00, 
    0x22, 0x22, 0x00, 0x3E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x44, 0x42, 0x42, 0xF2, 
    0x42, 0x42, 0x42, 0x44, 0x78, 0x00, 0x00, 0x00, 0x32, 0x4C, 0x00, 0x42, 
    0x62, 0x62, 0x52, 0x52, 0x4A, 0x4A, 0x46, 0x46, 0x42, 0x00, 0x00, 0x00, 
    0x30, 0x0C, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 
    0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x18, 0x24, 0x00, 0x3C, 
    0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x32, 0x4C, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 
    0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x22, 0x14, 0x08, 0x14, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x02, 0x3A, 0x44, 0x46, 0x4A, 0x4A, 0x52, 0x52, 0x62, 0x22, 
    0x5C, 0x40, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x42, 0x42, 0x42, 0x42, 0x42, 
    0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x42, 
    0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x18, 0x24, 0x00, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x42, 0x42, 0x42, 0x42, 0x42, 
    0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x06, 0x18, 0x00, 0x41, 
    0x41, 0x22, 0x22, 0x14, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x40, 0x40, 0x7C, 0x42, 0x42, 0x42, 0x42, 0x7C, 0x40, 
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x44, 0x4C, 0x50, 0x50, 
    0x4C, 0x42, 0x42, 0x52, 0x4C, 0x00, 0x00, 0x00, 0xAA, 0x55, 0xAA, 0x55, 
    0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 
    0x00, 0x00, 0x00, 0x08, 0x08, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x3E, 0x49, 0x48, 
    0x48, 0x48, 0x48, 0x49, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x1C, 
    0x20, 0x20, 0x20, 0x78, 0x20, 0x20, 0x20, 0x22, 0x7E, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x0E, 0x11, 0x20, 0x7E, 0x20, 0x7C, 0x20, 0x11, 
    0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x41, 0x22, 0x14, 0x08, 
    0x3E, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00, 0x24, 0x18, 0x00, 0x3C, 
    0x42, 0x42, 0x40, 0x30, 0x0C, 0x02, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x1C, 0x22, 0x20, 0x18, 0x24, 0x22, 0x22, 0x12, 0x0C, 0x02, 
    0x22, 0x1C, 0x00, 0x00, 0x00, 0x24, 0x18, 0x00, 0x00, 0x3C, 0x42, 0x40, 
    0x30, 0x0C, 0x02, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 
    0x42, 0x99, 0xA5, 0xA1, 0xA1, 0xA5, 0x99, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x38, 0x04, 0x3C, 0x44, 0x3C, 0x00, 0x7C, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x24, 
    0x48, 0x24, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x7E, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x1C, 0x22, 0x22, 0x22, 0x1C, 0x22, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0xB9, 0xA5, 0xA5, 
    0xB9, 0xA9, 0xA5, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x18, 0x24, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x7F, 0x08, 
    0x08, 0x08, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x44, 
    0x04, 0x18, 0x20, 0x40, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x38, 0x44, 0x04, 0x38, 0x04, 0x44, 0x38, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x24, 0x18, 0x00, 0x7E, 0x02, 0x02, 0x04, 0x08, 
    0x10, 0x20, 0x40, 0x40, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x66, 0x5A, 0x40, 0x40, 0x40, 
    0x00, 0x00, 0x00, 0x3E, 0x7A, 0x7A, 0x7A, 0x7A, 0x3A, 0x0A, 0x0A, 0x0A, 
    0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x18, 0x00, 
    0x00, 0x7E, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x7E, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x10, 0x30, 0x50, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x44, 0x44, 0x44, 0x38, 0x00, 
    0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x48, 0x24, 0x12, 0x24, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x37, 0x48, 0x48, 0x48, 0x4E, 0x48, 0x48, 0x48, 0x48, 
    0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x49, 0x49, 
    0x4F, 0x48, 0x48, 0x49, 0x36, 0x00, 0x00, 0x00, 0x22, 0x22, 0x00, 0x41, 
    0x41, 0x22, 0x22, 0x14, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x10, 0x10, 0x00, 0x10, 0x10, 0x20, 0x40, 0x42, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xF8, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0xF8, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x0F, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0xF8, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0xFF, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 
    0x88, 0x22, 0x88, 0x22, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 
    0x14, 0x14, 0x14, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 
    0x10, 0x17, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0xFC, 0x04, 0xF4, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 
    0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x17, 0x10, 0x1F, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0xF4, 
    0x04, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x14, 0x14, 0x14, 
    0x14, 0x14, 0x14, 0x17, 0x10, 0x17, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 
    0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0xF4, 0x04, 0xF4, 0x14, 0x14, 
    0x14, 0x14, 0x14, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 
    0x00, 0xF7, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 
    0x14, 0x14, 0x14, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0xF7, 0x00, 0xF7, 0x14, 0x14, 
    0x14, 0x14, 0x14, 0x14, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x08, 0x1C, 0x2A, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x2A, 0x1C, 0x08, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x20, 
    0x7F, 0x20, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x08, 0x04, 0xFE, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x30, 0x0C, 0x00, 0x00, 0x3C, 0x42, 0x02, 0x3E, 0x42, 0x42, 0x46, 
    0x3A, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x3C, 0x42, 0x02, 
    0x3E, 0x42, 0x42, 0x46, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x18, 0x24, 0x00, 
    0x00, 0x3C, 0x42, 0x02, 0x3E, 0x42, 0x42, 0x46, 0x3A, 0x00, 0x00, 0x00, 
    0x00, 0x32, 0x4C, 0x00, 0x00, 0x3C, 0x42, 0x02, 0x3E, 0x42, 0x42, 0x46, 
    0x3A, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x3C, 0x42, 0x02, 
    0x3E, 0x42, 0x42, 0x46, 0x3A, 0x00, 0x00, 0x00, 0x18, 0x24, 0x24, 0x18, 
    0x00, 0x3C, 0x42, 0x02, 0x3E, 0x42, 0x42, 0x46, 0x3A, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x49, 0x09, 0x3F, 0x48, 0x48, 0x49, 
    0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x42, 0x40, 
    0x40, 0x40, 0x40, 0x42, 0x3C, 0x08, 0x08, 0x30, 0x00, 0x30, 0x0C, 0x00, 
    0x00, 0x3C, 0x42, 0x42, 0x7E, 0x40, 0x40, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x00, 0x0C, 0x30, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x7E, 0x40, 0x40, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x18, 0x24, 0x00, 0x00, 0x3C, 0x42, 0x42, 
    0x7E, 0x40, 0x40, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 
    0x00, 0x3C, 0x42, 0x42, 0x7E, 0x40, 0x40, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x00, 0x30, 0x0C, 0x00, 0x00, 0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x3E, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x18, 0x08, 0x08, 
    0x08, 0x08, 0x08, 0x08, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x18, 0x24, 0x00, 
    0x00, 0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x3E, 0x00, 0x00, 0x00, 
    0x00, 0x24, 0x24, 0x00, 0x00, 0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x18, 0x64, 0x02, 0x3A, 0x46, 
    0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x32, 0x4C, 0x00, 
    0x00, 0x5C, 0x62, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x00, 0x00, 0x00, 
    0x00, 0x30, 0x0C, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x30, 0x00, 0x00, 0x3C, 0x42, 0x42, 
    0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x18, 0x24, 0x00, 
    0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 
    0x00, 0x32, 0x4C, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x3C, 0x42, 0x42, 
    0x42, 0x42, 0x42, 0x42, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x10, 0x10, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x10, 0x10, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x02, 0x3C, 0x46, 0x4A, 0x4A, 0x52, 0x52, 0x62, 
    0x3C, 0x40, 0x00, 0x00, 0x00, 0x30, 0x0C, 0x00, 0x00, 0x42, 0x42, 0x42, 
    0x42, 0x42, 0x42, 0x46, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x30, 0x00, 
    0x00, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x46, 0x3A, 0x00, 0x00, 0x00, 
    0x00, 0x18, 0x24, 0x00, 0x00, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x46, 
    0x3A, 0x00, 0x00, 0x00, 0x00, 0x24, 0x24, 0x00, 0x00, 0x42, 0x42, 0x42, 
    0x42, 0x42, 0x42, 0x46, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x30, 0x00, 
    0x00, 0x42, 0x42, 0x42, 0x42, 0x42, 0x46, 0x3A, 0x02, 0x02, 0x42, 0x3C, 
    0x00, 0x00, 0x40, 0x40, 0x40, 0x5C, 0x62, 0x42, 0x42, 0x42, 0x42, 0x62, 
    0x5C, 0x40, 0x40, 0x40, 0x00, 0x24, 0x24, 0x00, 0x00, 0x42, 0x42, 0x42, 
    0x42, 0x42, 0x46, 0x3A, 0x02, 0x02, 0x42, 0x3C, 0xFD, 0xFF, 0xFF, 0xFF, 
    0xC0, 0x03, 0xFF, 0xFF, 0x60, 0x22, 0xFF, 0xFF, 0x64, 0x22, 0xFF, 0xFF, 
    0x65, 0x22, 0xFF, 0xFF, 0xA0, 0x25, 0xAC, 0x25, 0xAE, 0x25, 0xFC, 0x25, 
    0xFE, 0x25, 0x1B, 0x2B, 0x0E, 0x22, 0xFF, 0xFF, 0xC6, 0x25, 0x66, 0x26, 
    0x25, 0x2B, 0x27, 0x2B, 0xFF, 0xFF, 0xBC, 0x00, 0xFF, 0xFF, 0xBD, 0x00, 
    0xFF, 0xFF, 0xBE, 0x00, 0xFF, 0xFF, 0xA6, 0x00, 0xFF, 0xFF, 0xA8, 0x00, 
    0xFF, 0xFF, 0xB8, 0x00, 0xFF, 0xFF, 0x92, 0x01, 0xFF, 0xFF, 0x20, 0x20, 
    0xFF, 0xFF, 0x21, 0x20, 0xFF, 0xFF, 0x30, 0x20, 0xFF, 0xFF, 0x22, 0x21, 
    0xFF, 0xFF, 0x26, 0x20, 0xFF, 0xFF, 0x39, 0x20, 0xFF, 0xFF, 0x3A, 0x20, 
    0xFF, 0xFF, 0x1C, 0x20, 0x1F, 0x20, 0x36, 0x20, 0xFF, 0xFF, 0x1D, 0x20, 
    0xBA, 0x02, 0xDD, 0x02, 0xEE, 0x02, 0x33, 0x20, 0xFF, 0xFF, 0x1E, 0x20, 
    0xFF, 0xFF, 0x42, 0x2E, 0xFF, 0xFF, 0x41, 0x2E, 0xCE, 0x02, 0xFF, 0xFF, 
    0x1E, 0x01, 0xFF, 0xFF, 0x1F, 0x01, 0xFF, 0xFF, 0x30, 0x01, 0xFF, 0xFF, 
    0x31, 0x01, 0xFF, 0xFF, 0x5E, 0x01, 0xFF, 0xFF, 0x5F, 0x01, 0xFF, 0xFF, 
    0x20, 0x00, 0xA0, 0x00, 0x00, 0x20, 0x01, 0x20, 0x02, 0x20, 0x03, 0x20, 
    0x04, 0x20, 0x05, 0x20, 0x06, 0x20, 0x07, 0x20, 0x08, 0x20, 0x09, 0x20, 
    0x0A, 0x20, 0x2F, 0x20, 0x5F, 0x20, 0xFF, 0xFF, 0x21, 0x00, 0xFF, 0xFF, 
    0x22, 0x00, 0xFF, 0xFF, 0x23, 0x00, 0xFF, 0xFF, 0x24, 0x00, 0xFF, 0xFF, 
    0x25, 0x00, 0xFF, 0xFF, 0x26, 0x00, 0xFF, 0xFF, 0x27, 0x00, 0xB4, 0x00, 
    0xB9, 0x02, 0xBC, 0x02, 0xCA, 0x02, 0x19, 0x20, 0x32, 0x20, 0xFF, 0xFF, 
    0x28, 0x00, 0xFF, 0xFF, 0x29, 0x00, 0xFF, 0xFF, 0x2A, 0x00, 0x4E, 0x20, 
    0x17, 0x22, 0xFF, 0xFF, 0x2B, 0x00, 0xFF, 0xFF, 0x2C, 0x00, 0xCF, 0x02, 
    0x1A, 0x20, 0xFF, 0xFF, 0x2D, 0x00, 0xAD, 0x00, 0x10, 0x20, 0x11, 0x20, 
    0x12, 0x20, 0x13, 0x20, 0x43, 0x20, 0x12, 0x22, 0xFF, 0xFF, 0x2E, 0x00, 
    0x24, 0x20, 0xFF, 0xFF, 0x2F, 0x00, 0x44, 0x20, 0x15, 0x22, 0xFF, 0xFF, 
    0x30, 0x00, 0xFF, 0xFF, 0x31, 0x00, 0xFF, 0xFF, 0x32, 0x00, 0xFF, 0xFF, 
    0x33, 0x00, 0xFF, 0xFF, 0x34, 0x00, 0xFF, 0xFF, 0x35, 0x00, 0xFF, 0xFF, 
    0x36, 0x00, 0xFF, 0xFF, 0x37, 0x00, 0xFF, 0xFF, 0x38, 0x00, 0xFF, 0xFF, 
    0x39, 0x00, 0xFF, 0xFF, 0x3A, 0x00, 0x36, 0x22, 0xFF, 0xFF, 0x3B, 0x00, 
    0xFF, 0xFF, 0x3C, 0x00, 0xFF, 0xFF, 0x3D, 0x00, 0x40, 0x2E, 0xFF, 0xFF, 
    0x3E, 0x00, 0xFF, 0xFF, 0x3F, 0x00, 0xFF, 0xFF, 0x40, 0x00, 0xFF, 0xFF, 
    0x41, 0x00, 0xFF, 0xFF, 0x42, 0x00, 0xFF, 0xFF, 0x43, 0x00, 0xFF, 0xFF, 
    0x44, 0x00, 0xFF, 0xFF, 0x45, 0x00, 0xFF, 0xFF, 0x46, 0x00, 0xFF, 0xFF, 
    0x47, 0x00, 0xFF, 0xFF, 0x48, 0x00, 0xFF, 0xFF, 0x49, 0x00, 0xFF, 0xFF, 
    0x4A, 0x00, 0xFF, 0xFF, 0x4B, 0x00, 0x2A, 0x21, 0xFF, 0xFF, 0x4C, 0x00, 
    0xFF, 0xFF, 0x4D, 0x00, 0xFF, 0xFF, 0x4E, 0x00, 0xFF, 0xFF, 0x4F, 0x00, 
    0xFF, 0xFF, 0x50, 0x00, 0xFF, 0xFF, 0x51, 0x00, 0xFF, 0xFF, 0x52, 0x00, 
    0xFF, 0xFF, 0x53, 0x00, 0xFF, 0xFF, 0x54, 0x00, 0xFF, 0xFF, 0x55, 0x00, 
    0xFF, 0xFF, 0x56, 0x00, 0xFF, 0xFF, 0x57, 0x00, 0xFF, 0xFF, 0x58, 0x00, 
    0xFF, 0xFF, 0x59, 0x00, 0xFF, 0xFF, 0x5A, 0x00, 0xFF, 0xFF, 0x5B, 0x00, 
    0xFF, 0xFF, 0x5C, 0x00, 0xF5, 0x29, 0xFF, 0xFF, 0x5D, 0x00, 0xFF, 0xFF, 
    0x5E, 0x00, 0xC4, 0x02, 0xC6, 0x02, 0x03, 0x23, 0xFF, 0xFF, 0x5F, 0x00, 
    0xFF, 0xFF, 0x60, 0x00, 0xBB, 0x02, 0xBD, 0x02, 0xCB, 0x02, 0x18, 0x20, 
    0x1B, 0x20, 0x35, 0x20, 0xFF, 0xFF, 0x61, 0x00, 0xFF, 0xFF, 0x62, 0x00, 
    0xFF, 0xFF, 0x63, 0x00, 0xFF, 0xFF, 0x64, 0x00, 0xFF, 0xFF, 0x65, 0x00, 
    0xFF, 0xFF, 0x66, 0x00, 0xFF, 0xFF, 0x67, 0x00, 0xFF, 0xFF, 0x68, 0x00, 
    0xFF, 0xFF, 0x69, 0x00, 0xFF, 0xFF, 0x6A, 0x00, 0xFF, 0xFF, 0x6B, 0x00, 
    0xFF, 0xFF, 0x6C, 0x00, 0xFF, 0xFF, 0x6D, 0x00, 0xFF, 0xFF, 0x6E, 0x00, 
    0xFF, 0xFF, 0x6F, 0x00, 0xFF, 0xFF, 0x70, 0x00, 0xFF, 0xFF, 0x71, 0x00, 
    0xFF, 0xFF, 0x72, 0x00, 0xFF, 0xFF, 0x73, 0x00, 0xFF, 0xFF, 0x74, 0x00, 
    0xFF, 0xFF, 0x75, 0x00, 0xFF, 0xFF, 0x76, 0x00, 0xFF, 0xFF, 0x77, 0x00, 
    0xFF, 0xFF, 0x78, 0x00, 0xFF, 0xFF, 0x79, 0x00, 0xFF, 0xFF, 0x7A, 0x00, 
    0xFF, 0xFF, 0x7B, 0x00, 0xFF, 0xFF, 0x7C, 0x00, 0x23, 0x22, 0xFF, 0xFF, 
    0x7D, 0x00, 0xFF, 0xFF, 0x7E, 0x00, 0xDC, 0x02, 0xFF, 0xFF, 0x22, 0x20, 
    0x19, 0x22, 0xCF, 0x25, 0xFF, 0xFF, 0xC0, 0x00, 0xFF, 0xFF, 0xC1, 0x00, 
    0xFF, 0xFF, 0xC2, 0x00, 0xFF, 0xFF, 0xC3, 0x00, 0xFF, 0xFF, 0xC4, 0x00, 
    0xFF, 0xFF, 0xC5, 0x00, 0x2B, 0x21, 0xFF, 0xFF, 0xC6, 0x00, 0xFF, 0xFF, 
    0xC7, 0x00, 0xFF, 0xFF, 0xC8, 0x00, 0xFF, 0xFF, 0xC9, 0x00, 0xFF, 0xFF, 
    0xCA, 0x00, 0xFF, 0xFF, 0xCB, 0x00, 0xFF, 0xFF, 0xCC, 0x00, 0xFF, 0xFF, 
    0xCD, 0x00, 0xFF, 0xFF, 0xCE, 0x00, 0xFF, 0xFF, 0xCF, 0x00, 0xFF, 0xFF, 
    0xD0, 0x00, 0x10, 0x01, 0xFF, 0xFF, 0xD1, 0x00, 0xFF, 0xFF, 0xD2, 0x00, 
    0xFF, 0xFF, 0xD3, 0x00, 0xFF, 0xFF, 0xD4, 0x00, 0xFF, 0xFF, 0xD5, 0x00, 
    0xFF, 0xFF, 0xD6, 0x00, 0xFF, 0xFF, 0xD7, 0x00, 0xFF, 0xFF, 0xD8, 0x00, 
    0xFF, 0xFF, 0xD9, 0x00, 0xFF, 0xFF, 0xDA, 0x00, 0xFF, 0xFF, 0xDB, 0x00, 
    0xFF, 0xFF, 0xDC, 0x00, 0xFF, 0xFF, 0xDD, 0x00, 0xFF, 0xFF, 0xDE, 0x00, 
    0xFF, 0xFF, 0xDF, 0x00, 0xFF, 0xFF, 0x92, 0x25, 0xFF, 0xFF, 0xA1, 0x00, 
    0xFF, 0xFF, 0xA2, 0x00, 0xFF, 0xFF, 0xA3, 0x00, 0xFF, 0xFF, 0xAC, 0x20, 
    0xFF, 0xFF, 0xA5, 0x00, 0xFF, 0xFF, 0x60, 0x01, 0xFF, 0xFF, 0xA7, 0x00, 
    0xFF, 0xFF, 0x61, 0x01, 0xFF, 0xFF, 0xA9, 0x00, 0xFF, 0xFF, 0xAA, 0x00, 
    0xFF, 0xFF, 0xAB, 0x00, 0xFF, 0xFF, 0xAC, 0x00, 0xFF, 0xFF, 0xA4, 0x00, 
    0xFF, 0xFF, 0xAE, 0x00, 0xFF, 0xFF, 0xAF, 0x00, 0xC9, 0x02, 0xFF, 0xFF, 
    0xB0, 0x00, 0xDA, 0x02, 0xFF, 0xFF, 0xB1, 0x00, 0xFF, 0xFF, 0xB2, 0x00, 
    0xFF, 0xFF, 0xB3, 0x00, 0xFF, 0xFF, 0x7D, 0x01, 0xFF, 0xFF, 0xB5, 0x00, 
    0xBC, 0x03, 0xFF, 0xFF, 0xB6, 0x00, 0xFF, 0xFF, 0xB7, 0x00, 0x27, 0x20, 
    0xC5, 0x22, 0x31, 0x2E, 0xFF, 0xFF, 0x7E, 0x01, 0xFF, 0xFF, 0xB9, 0x00, 
    0xFF, 0xFF, 0xBA, 0x00, 0xFF, 0xFF, 0xBB, 0x00, 0xFF, 0xFF, 0x52, 0x01, 
    0xFF, 0xFF, 0x53, 0x01, 0xFF, 0xFF, 0x78, 0x01, 0xFF, 0xFF, 0xBF, 0x00, 
    0xFF, 0xFF, 0x00, 0x25, 0x14, 0x20, 0x15, 0x20, 0xAF, 0x23, 0xFF, 0xFF, 
    0x02, 0x25, 0xFF, 0xFF, 0x0C, 0x25, 0x6D, 0x25, 0xFF, 0xFF, 0x10, 0x25, 
    0x6E, 0x25, 0xFF, 0xFF, 0x14, 0x25, 0x70, 0x25, 0xFF, 0xFF, 0x18, 0x25, 
    0x6F, 0x25, 0xFF, 0xFF, 0x1C, 0x25, 0xFF, 0xFF, 0x24, 0x25, 0xFF, 0xFF, 
    0x2C, 0x25, 0xFF, 0xFF, 0x34, 0x25, 0xFF, 0xFF, 0x3C, 0x25, 0xFF, 0xFF, 
    0x91, 0x25, 0xFF, 0xFF, 0xBA, 0x23, 0x3E, 0x20, 0xFF, 0xFF, 0xBB, 0x23, 
    0xFF, 0xFF, 0xBC, 0x23, 0xFF, 0xFF, 0xBD, 0x23, 0xFF, 0xFF, 0x50, 0x25, 
    0x01, 0x25, 0xFF, 0xFF, 0x51, 0x25, 0x03, 0x25, 0xFF, 0xFF, 0x54, 0x25, 
    0x0F, 0x25, 0xFF, 0xFF, 0x57, 0x25, 0x13, 0x25, 0xFF, 0xFF, 0x5A, 0x25, 
    0x17, 0x25, 0xFF, 0xFF, 0x5D, 0x25, 0x1B, 0x25, 0xFF, 0xFF, 0x60, 0x25, 
    0x23, 0x25, 0xFF, 0xFF, 0x63, 0x25, 0x2B, 0x25, 0xFF, 0xFF, 0x66, 0x25, 
    0x33, 0x25, 0xFF, 0xFF, 0x69, 0x25, 0x3B, 0x25, 0xFF, 0xFF, 0x6C, 0x25, 
    0x4B, 0x25, 0xFF, 0xFF, 0x88, 0x25, 0xFF, 0xFF, 0x91, 0x21, 0xFF, 0xFF, 
    0x93, 0x21, 0xFF, 0xFF, 0x90, 0x21, 0xFF, 0xFF, 0x92, 0x21, 0xFF, 0xFF, 
    0xE0, 0x00, 0xFF, 0xFF, 0xE1, 0x00, 0xFF, 0xFF, 0xE2, 0x00, 0xFF, 0xFF, 
    0xE3, 0x00, 0xFF, 0xFF, 0xE4, 0x00, 0xFF, 0xFF, 0xE5, 0x00, 0xFF, 0xFF, 
    0xE6, 0x00, 0xFF, 0xFF, 0xE7, 0x00, 0xFF, 0xFF, 0xE8, 0x00, 0xFF, 0xFF, 
    0xE9, 0x00, 0xFF, 0xFF, 0xEA, 0x00, 0xFF, 0xFF, 0xEB, 0x00, 0xFF, 0xFF, 
    0xEC, 0x00, 0xFF, 0xFF, 0xED, 0x00, 0xFF, 0xFF, 0xEE, 0x00, 0xFF, 0xFF, 
    0xEF, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0xFF, 0xFF, 0xF1, 0x00, 0xFF, 0xFF, 
    0xF2, 0x00, 0xFF, 0xFF, 0xF3, 0x00, 0xFF, 0xFF, 0xF4, 0x00, 0xFF, 0xFF, 
    0xF5, 0x00, 0xFF, 0xFF, 0xF6, 0x00, 0xFF, 0xFF, 0xF7, 0x00, 0xFF, 0xFF, 
    0xF8, 0x00, 0xFF, 0xFF, 0xF9, 0x00, 0xFF, 0xFF, 0xFA, 0x00, 0xFF, 0xFF, 
    0xFB, 0x00, 0xFF, 0xFF, 0xFC, 0x00, 0xFF, 0xFF, 0xFD, 0x00, 0xFF, 0xFF, 
    0xFE, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF
};

#define PSF_FONT_DATA_SIZE 5312

#define FONT_WIDTH  8
#define FONT_HEIGHT 16

#define TEXT_COLOR 0xffffff

static uint32_t size;
static uint32_t cursor_x = 0, cursor_y = 0;
uint32_t* pixels = (uint32_t*)0xffffff8000000000;

void
clear_screen()
{
    uint32_t i;

    for (i = 0; i < size; i++) {
        pixels[i] = 0x1F1F1F;
    }
}

void init_framebuffer_renderer()
{
    uint32_t bytes_per_pixel;
    uint32_t framebuffer_page_count;

    bytes_per_pixel = 4;
    framebuffer_page_count =
        (g_mbi_framebuffer->common.framebuffer_width * g_mbi_framebuffer->common.framebuffer_height * bytes_per_pixel) /
        PAGE_SIZE;

    size = framebuffer_page_count * PAGE_SIZE / bytes_per_pixel;

    uint64_t cr3;
    asm volatile ("mov %%cr3, %0" : "=r" (cr3));
    paging::page_table* pml4 = (paging::page_table*)cr3;

    uintptr_t gop = g_mbi_framebuffer->common.framebuffer_addr;
    for (uint32_t i = 0; i < framebuffer_page_count; i++) {
        paging::map_page(0xffffff8000000000 + i * PAGE_SIZE, gop + i * PAGE_SIZE, pml4, allocators::page_bootstrap_allocator().get());
    }

    // Flush the entire TLB
    asm volatile ("mov %cr3, %rax");
    asm volatile ("mov %rax, %cr3");

    clear_screen();
}

void fill_pixel(uint32_t x, uint32_t y, uint32_t color) {
    volatile uint32_t* pixelPtr = pixels + x + (y * g_mbi_framebuffer->common.framebuffer_width);
    *pixelPtr = color;
}

void render_text_glyph(char c, uint32_t x, uint32_t y, uint32_t color) {
    int row;
    int col;
    uint8_t glyph_row;

    // Get the font glyph data offset for the character
    const uint8_t *glyph = &psf_font_data[4 + (c * FONT_HEIGHT)];

    // Render the glyph onto the framebuffer
    for (row = 0; row < FONT_HEIGHT; row++) {
        glyph_row = glyph[row];
        for (col = 0; col < FONT_WIDTH; col++) {
            if (glyph_row & (1 << (7 - col))) {
                int pixel_x = x + col;
                int pixel_y = y + row;

                fill_pixel(pixel_x, pixel_y, color);
            }
        }
    }
}

void render_string(const char *str) {
    while (*str) {
        if (*str == '\n') {
            // Move to the next line
            cursor_y += FONT_HEIGHT;
            cursor_x = 0;
        } else {
            // Render the character
            render_text_glyph(*str, cursor_x, cursor_y, TEXT_COLOR);
            cursor_x += FONT_WIDTH;

            // Check for line wrapping
            if (cursor_x + FONT_WIDTH > g_mbi_framebuffer->common.framebuffer_width) {
                cursor_x = 0;
                cursor_y += FONT_HEIGHT;
            }
        }
        str++;
    }
}

__PRIVILEGED_CODE
void walk_mbi(void* mbi) {
    // Cast the mbi pointer to a byte pointer for arithmetic
    uint8_t* ptr = static_cast<uint8_t*>(mbi);
    uint32_t total_size = *reinterpret_cast<uint32_t*>(ptr);

    // Move pointer past the initial 8 bytes
    ptr += 8;

    // Calculate the end of the MBI structure
    uint8_t* mbi_end = static_cast<uint8_t*>(mbi) + total_size;

    while (ptr < mbi_end) {
        // Interpret the current position as a multiboot_tag
        multiboot_tag* tag = reinterpret_cast<multiboot_tag*>(ptr);

        // Process the tag based on its type
        switch (tag->type) {
            case MULTIBOOT_TAG_TYPE_CMDLINE: {
                multiboot_tag_string* cmdline_tag = reinterpret_cast<multiboot_tag_string*>(tag);
                g_mbi_kernel_cmdline = cmdline_tag->string;
                break;
            }
            case MULTIBOOT_TAG_TYPE_FRAMEBUFFER: {
                g_mbi_framebuffer = reinterpret_cast<multiboot_tag_framebuffer*>(tag);
                break;
            }
            case MULTIBOOT_TAG_TYPE_EFI_MMAP: { // New case for EFI Memory Map
                g_mbi_efi_mmap = reinterpret_cast<void*>(tag);
                break;
            }
            default: {
                break;
            }
        }

        // Move to the next tag, ensuring 8-byte alignment
        ptr += (tag->size + 7) & ~7;
    }
}

EXTERN_C
__PRIVILEGED_CODE
void init(unsigned int magic, void* mbi) {
    if (magic != MULTIBOOT2_BOOTLOADER_MAGIC) {
        while (true) { asm volatile ("hlt"); }
    }

    serial::init_port(SERIAL_PORT_BASE_COM1);

    // Architecture-specific initialization sequences
    arch::arch_init();

    // Process and store multiboot provided information
    walk_mbi(mbi);

    // Initialize memory allocators
    paging::init_physical_allocator(g_mbi_efi_mmap);

    // uint64_t cr3;
    // asm volatile ("mov %%cr3, %0" : "=r" (cr3));
    // paging::page_table* pml4 = (paging::page_table*)cr3;

    // uintptr_t gop = g_mbi_framebuffer->common.framebuffer_addr;
    // paging::map_page(0xffffff8000000000, gop, pml4, allocators::page_bootstrap_allocator().get());

    // // Flush the entire TLB
    // asm volatile ("mov %cr3, %rax");
    // asm volatile ("mov %rax, %cr3");

    // uint32_t* gop_ptr = (uint32_t*)(0xffffff8000000000);
    // for (uint32_t i = 0; i < (PAGE_SIZE / sizeof(uint32_t)); i++) {
    //     *gop_ptr = 0xffffaaff;
    //     ++gop_ptr;
    // }

    init_framebuffer_renderer();

    render_string("Hello!\n");

    // Idle loop
    while (true) {
        asm volatile ("hlt");
    }
}
